--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID)=6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderid)=6
AND orderID<>'Order ID' 
AND Product = 'iPhone'; 

--Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
ON FebSales.orderid = customers.order_id
WHERE length(orderid)=6
AND orderID <> 'Order ID';


--Which product was the cheapest one sold in January, and what was the price?
SELECT Product, price
FROM BIT_DB.JanSales
ORDER by price asc
LIMIT 1; 

--What is the total revenue for each product sold in January?
SELECT Product, SUM(quantity)*price AS Revenue 
FROM BIT_DB.JanSales
GROUP BY Product; 

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, sum(quantity), SUM(quantity)*price AS Revenue, location
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT distinct count(cust.acctnum), avg(price*quantity)
FROM BIT_DB.customers cust
JOIN BIT_DB.FebSales feb
ON cust.order_id=feb.orderid
WHERE feb.quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID'; 



--Data Filtering Techniques

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'; 

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/18/19%'; 

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Batteries%';

Select distinct Product, Price
FROM BIT_DB.FebSales
WHERE Price LIKE '%.99'; 

SELECT product, sum(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product; 


--Advanced Customer and Order Analytics

--1. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderID) = 6
AND orderid <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID)> 2; 

--2. How many of each type of headphone were sold in February?
SELECT DISTINCT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones'
GROUP BY Product;

--3. What was the average amount spent per account in February? 
SELECT SUM(price*quantity)/COUNT(customers.acctnum)
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
ON customers.order_id=FebSales.orderID
WHERE customers.order_id <> 'Order ID'
AND customers.order_id IS NOT NULL;

--4. What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).
SELECT SUM(quantity)/COUNT(accnum)
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
ON customers.order_id=FebSales.orderID
WHERE order_id <> 'Order ID'
AND order_id IS NOT NULL;


--5. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) desc
LIMIT 1; 
 

