CREATE TABLE BIT_DB.authors (
id integer PRIMARY KEY,
fullname varchar NOT NULL,
booktitle varchar NOT NULL,
yearpub varchar NOT NULL
)

    INSERT INTO authors VALUES (NULL, "JK Rowling", "Harry Potter and the Philosopher's Stone", 1997);
    INSERT INTO authors VALUES (NULL, "Michelle Zauner", "Crying in H Mart", 2021);
    INSERT INTO authors VALUES (NULL, "Viola Davis", "Finding Me", 2022);
    INSERT INTO authors VALUES (NULL, "Michelle Obama", "Becoming", 2018);
    INSERT INTO authors VALUES (NULL, "Neil Gaiman", "Nevermore", 1996);
    INSERT INTO authors VALUES (NULL, "Jeff Henderson", "Cooked", 2007);
    INSERT INTO authors VALUES (NULL, "Michelle Obama", "The Light We Carry", 2022);
    INSERT INTO authors VALUES (NULL, "Sehee Baek", "I Want to Die But I Want to Eat Tteokpokki", 2018);


CREATE TABLE BIT_DB.birthinfo (
author_id integer PRIMARY KEY,
city varchar NOT NULL,
country varchar NOT NULL,
year varchar NOT NULL
)

    INSERT INTO birthinfo VALUES (NULL, "Yate", "UK", 1965);
    INSERT INTO birthinfo VALUES (NULL, "Seoul", "Korea", 1989);
    INSERT INTO birthinfo VALUES (NULL, "St Matthews", "US", 1965);
    INSERT INTO birthinfo VALUES (NULL, "Chicago", "US", 1964);
    INSERT INTO birthinfo VALUES (NULL, "Portchester", "UK", 1960);
    INSERT INTO birthinfo VALUES (NULL, "Los Angeles", "US", 1964);
    INSERT INTO birthinfo VALUES (NULL, "Chicago", "US", 1964);
    INSERT INTO birthinfo VALUES (NULL, "Seoul", "Korea", 1990);

CREATE TABLE BIT_DB.interview_pairs (
id integer PRIMARY KEY,
author1_id integer NOT NULL,
author2_id integer NOT NULL
)
    
    INSERT INTO interview_pairs VALUES (NULL, 1,3);
    INSERT INTO interview_pairs VALUES (NULL, 2,4);
    INSERT INTO interview_pairs VALUES (NULL, 5,6);
    INSERT INTO interview_pairs VALUES (NULL, 7,8);

-- Which authors are born outside the US?

SELECT fullname AS "name", country AS "birth country" FROM birthinfo 
    JOIN authors
        ON authors.id = birthinfo.author_id
    WHERE country NOT LIKE "US"; 

-- Which authors are paired together for an interview? 

SELECT a.fullname AS "Interviewer 1", b.fullname AS "Interviewer 2" 
    FROM interview_pairs
    JOIN authors a 
        ON author1_id = a.id
    JOIN authors b
        ON author2_id = b.id;
        
-- How old was each author when his/her book was published? 

SELECT fullname AS "Full Name", booktitle AS "Book Title", yearpub AS "Year Published", authors.yearpub-birthinfo.year AS "Author's Age"
FROM authors
JOIN birthinfo
    ON authors.id = birthinfo.author_id; 
